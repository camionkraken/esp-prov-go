// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.27.2
// source: session.proto

package protogen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Allowed values for the type of security
// being used in a protocomm session
type SecSchemeVersion int32

const (
	SecSchemeVersion_SecScheme0 SecSchemeVersion = 0 //!< Unsecured - plaintext communication
	SecSchemeVersion_SecScheme1 SecSchemeVersion = 1 //!< Security scheme 1 - Curve25519 + AES-256-CTR
	SecSchemeVersion_SecScheme2 SecSchemeVersion = 2 //!< Security scheme 2 - SRP6a + AES-256-GCM
)

// Enum value maps for SecSchemeVersion.
var (
	SecSchemeVersion_name = map[int32]string{
		0: "SecScheme0",
		1: "SecScheme1",
		2: "SecScheme2",
	}
	SecSchemeVersion_value = map[string]int32{
		"SecScheme0": 0,
		"SecScheme1": 1,
		"SecScheme2": 2,
	}
)

func (x SecSchemeVersion) Enum() *SecSchemeVersion {
	p := new(SecSchemeVersion)
	*p = x
	return p
}

func (x SecSchemeVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecSchemeVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_session_proto_enumTypes[0].Descriptor()
}

func (SecSchemeVersion) Type() protoreflect.EnumType {
	return &file_session_proto_enumTypes[0]
}

func (x SecSchemeVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecSchemeVersion.Descriptor instead.
func (SecSchemeVersion) EnumDescriptor() ([]byte, []int) {
	return file_session_proto_rawDescGZIP(), []int{0}
}

// Data structure exchanged when establishing
// secure session between Host and Client
type SessionData struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	SecVer SecSchemeVersion       `protobuf:"varint,2,opt,name=sec_ver,json=secVer,proto3,enum=SecSchemeVersion" json:"sec_ver,omitempty"` //!< Type of security
	// Types that are valid to be assigned to Proto:
	//
	//	*SessionData_Sec0
	//	*SessionData_Sec1
	//	*SessionData_Sec2
	Proto         isSessionData_Proto `protobuf_oneof:"proto"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionData) Reset() {
	*x = SessionData{}
	mi := &file_session_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionData) ProtoMessage() {}

func (x *SessionData) ProtoReflect() protoreflect.Message {
	mi := &file_session_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionData.ProtoReflect.Descriptor instead.
func (*SessionData) Descriptor() ([]byte, []int) {
	return file_session_proto_rawDescGZIP(), []int{0}
}

func (x *SessionData) GetSecVer() SecSchemeVersion {
	if x != nil {
		return x.SecVer
	}
	return SecSchemeVersion_SecScheme0
}

func (x *SessionData) GetProto() isSessionData_Proto {
	if x != nil {
		return x.Proto
	}
	return nil
}

func (x *SessionData) GetSec0() *Sec0Payload {
	if x != nil {
		if x, ok := x.Proto.(*SessionData_Sec0); ok {
			return x.Sec0
		}
	}
	return nil
}

func (x *SessionData) GetSec1() *Sec1Payload {
	if x != nil {
		if x, ok := x.Proto.(*SessionData_Sec1); ok {
			return x.Sec1
		}
	}
	return nil
}

func (x *SessionData) GetSec2() *Sec2Payload {
	if x != nil {
		if x, ok := x.Proto.(*SessionData_Sec2); ok {
			return x.Sec2
		}
	}
	return nil
}

type isSessionData_Proto interface {
	isSessionData_Proto()
}

type SessionData_Sec0 struct {
	Sec0 *Sec0Payload `protobuf:"bytes,10,opt,name=sec0,proto3,oneof"` //!< Payload data in case of security 0
}

type SessionData_Sec1 struct {
	Sec1 *Sec1Payload `protobuf:"bytes,11,opt,name=sec1,proto3,oneof"` //!< Payload data in case of security 1
}

type SessionData_Sec2 struct {
	Sec2 *Sec2Payload `protobuf:"bytes,12,opt,name=sec2,proto3,oneof"` //!< Payload data in case of security 2
}

func (*SessionData_Sec0) isSessionData_Proto() {}

func (*SessionData_Sec1) isSessionData_Proto() {}

func (*SessionData_Sec2) isSessionData_Proto() {}

var File_session_proto protoreflect.FileDescriptor

const file_session_proto_rawDesc = "" +
	"\n" +
	"\rsession.proto\x1a\n" +
	"sec0.proto\x1a\n" +
	"sec1.proto\x1a\n" +
	"sec2.proto\"\xae\x01\n" +
	"\vSessionData\x12*\n" +
	"\asec_ver\x18\x02 \x01(\x0e2\x11.SecSchemeVersionR\x06secVer\x12\"\n" +
	"\x04sec0\x18\n" +
	" \x01(\v2\f.Sec0PayloadH\x00R\x04sec0\x12\"\n" +
	"\x04sec1\x18\v \x01(\v2\f.Sec1PayloadH\x00R\x04sec1\x12\"\n" +
	"\x04sec2\x18\f \x01(\v2\f.Sec2PayloadH\x00R\x04sec2B\a\n" +
	"\x05proto*B\n" +
	"\x10SecSchemeVersion\x12\x0e\n" +
	"\n" +
	"SecScheme0\x10\x00\x12\x0e\n" +
	"\n" +
	"SecScheme1\x10\x01\x12\x0e\n" +
	"\n" +
	"SecScheme2\x10\x02B\vZ\t/protogenb\x06proto3"

var (
	file_session_proto_rawDescOnce sync.Once
	file_session_proto_rawDescData []byte
)

func file_session_proto_rawDescGZIP() []byte {
	file_session_proto_rawDescOnce.Do(func() {
		file_session_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_session_proto_rawDesc), len(file_session_proto_rawDesc)))
	})
	return file_session_proto_rawDescData
}

var file_session_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_session_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_session_proto_goTypes = []any{
	(SecSchemeVersion)(0), // 0: SecSchemeVersion
	(*SessionData)(nil),   // 1: SessionData
	(*Sec0Payload)(nil),   // 2: Sec0Payload
	(*Sec1Payload)(nil),   // 3: Sec1Payload
	(*Sec2Payload)(nil),   // 4: Sec2Payload
}
var file_session_proto_depIdxs = []int32{
	0, // 0: SessionData.sec_ver:type_name -> SecSchemeVersion
	2, // 1: SessionData.sec0:type_name -> Sec0Payload
	3, // 2: SessionData.sec1:type_name -> Sec1Payload
	4, // 3: SessionData.sec2:type_name -> Sec2Payload
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_session_proto_init() }
func file_session_proto_init() {
	if File_session_proto != nil {
		return
	}
	file_sec0_proto_init()
	file_sec1_proto_init()
	file_sec2_proto_init()
	file_session_proto_msgTypes[0].OneofWrappers = []any{
		(*SessionData_Sec0)(nil),
		(*SessionData_Sec1)(nil),
		(*SessionData_Sec2)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_session_proto_rawDesc), len(file_session_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_session_proto_goTypes,
		DependencyIndexes: file_session_proto_depIdxs,
		EnumInfos:         file_session_proto_enumTypes,
		MessageInfos:      file_session_proto_msgTypes,
	}.Build()
	File_session_proto = out.File
	file_session_proto_goTypes = nil
	file_session_proto_depIdxs = nil
}
