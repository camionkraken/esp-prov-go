// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.27.2
// source: wifi_config.proto

package protogen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WiFiConfigMsgType int32

const (
	WiFiConfigMsgType_TypeCmdGetStatus    WiFiConfigMsgType = 0
	WiFiConfigMsgType_TypeRespGetStatus   WiFiConfigMsgType = 1
	WiFiConfigMsgType_TypeCmdSetConfig    WiFiConfigMsgType = 2
	WiFiConfigMsgType_TypeRespSetConfig   WiFiConfigMsgType = 3
	WiFiConfigMsgType_TypeCmdApplyConfig  WiFiConfigMsgType = 4
	WiFiConfigMsgType_TypeRespApplyConfig WiFiConfigMsgType = 5
)

// Enum value maps for WiFiConfigMsgType.
var (
	WiFiConfigMsgType_name = map[int32]string{
		0: "TypeCmdGetStatus",
		1: "TypeRespGetStatus",
		2: "TypeCmdSetConfig",
		3: "TypeRespSetConfig",
		4: "TypeCmdApplyConfig",
		5: "TypeRespApplyConfig",
	}
	WiFiConfigMsgType_value = map[string]int32{
		"TypeCmdGetStatus":    0,
		"TypeRespGetStatus":   1,
		"TypeCmdSetConfig":    2,
		"TypeRespSetConfig":   3,
		"TypeCmdApplyConfig":  4,
		"TypeRespApplyConfig": 5,
	}
)

func (x WiFiConfigMsgType) Enum() *WiFiConfigMsgType {
	p := new(WiFiConfigMsgType)
	*p = x
	return p
}

func (x WiFiConfigMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WiFiConfigMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_wifi_config_proto_enumTypes[0].Descriptor()
}

func (WiFiConfigMsgType) Type() protoreflect.EnumType {
	return &file_wifi_config_proto_enumTypes[0]
}

func (x WiFiConfigMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WiFiConfigMsgType.Descriptor instead.
func (WiFiConfigMsgType) EnumDescriptor() ([]byte, []int) {
	return file_wifi_config_proto_rawDescGZIP(), []int{0}
}

type CmdGetStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdGetStatus) Reset() {
	*x = CmdGetStatus{}
	mi := &file_wifi_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdGetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdGetStatus) ProtoMessage() {}

func (x *CmdGetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdGetStatus.ProtoReflect.Descriptor instead.
func (*CmdGetStatus) Descriptor() ([]byte, []int) {
	return file_wifi_config_proto_rawDescGZIP(), []int{0}
}

type RespGetStatus struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Status   Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
	StaState WifiStationState       `protobuf:"varint,2,opt,name=sta_state,json=staState,proto3,enum=WifiStationState" json:"sta_state,omitempty"`
	// Types that are valid to be assigned to State:
	//
	//	*RespGetStatus_FailReason
	//	*RespGetStatus_Connected
	State         isRespGetStatus_State `protobuf_oneof:"state"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespGetStatus) Reset() {
	*x = RespGetStatus{}
	mi := &file_wifi_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespGetStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetStatus) ProtoMessage() {}

func (x *RespGetStatus) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetStatus.ProtoReflect.Descriptor instead.
func (*RespGetStatus) Descriptor() ([]byte, []int) {
	return file_wifi_config_proto_rawDescGZIP(), []int{1}
}

func (x *RespGetStatus) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

func (x *RespGetStatus) GetStaState() WifiStationState {
	if x != nil {
		return x.StaState
	}
	return WifiStationState_Connected
}

func (x *RespGetStatus) GetState() isRespGetStatus_State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *RespGetStatus) GetFailReason() WifiConnectFailedReason {
	if x != nil {
		if x, ok := x.State.(*RespGetStatus_FailReason); ok {
			return x.FailReason
		}
	}
	return WifiConnectFailedReason_AuthError
}

func (x *RespGetStatus) GetConnected() *WifiConnectedState {
	if x != nil {
		if x, ok := x.State.(*RespGetStatus_Connected); ok {
			return x.Connected
		}
	}
	return nil
}

type isRespGetStatus_State interface {
	isRespGetStatus_State()
}

type RespGetStatus_FailReason struct {
	FailReason WifiConnectFailedReason `protobuf:"varint,10,opt,name=fail_reason,json=failReason,proto3,enum=WifiConnectFailedReason,oneof"`
}

type RespGetStatus_Connected struct {
	Connected *WifiConnectedState `protobuf:"bytes,11,opt,name=connected,proto3,oneof"`
}

func (*RespGetStatus_FailReason) isRespGetStatus_State() {}

func (*RespGetStatus_Connected) isRespGetStatus_State() {}

type CmdSetConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ssid          []byte                 `protobuf:"bytes,1,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Passphrase    []byte                 `protobuf:"bytes,2,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	Bssid         []byte                 `protobuf:"bytes,3,opt,name=bssid,proto3" json:"bssid,omitempty"`
	Channel       int32                  `protobuf:"varint,4,opt,name=channel,proto3" json:"channel,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdSetConfig) Reset() {
	*x = CmdSetConfig{}
	mi := &file_wifi_config_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdSetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdSetConfig) ProtoMessage() {}

func (x *CmdSetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_config_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdSetConfig.ProtoReflect.Descriptor instead.
func (*CmdSetConfig) Descriptor() ([]byte, []int) {
	return file_wifi_config_proto_rawDescGZIP(), []int{2}
}

func (x *CmdSetConfig) GetSsid() []byte {
	if x != nil {
		return x.Ssid
	}
	return nil
}

func (x *CmdSetConfig) GetPassphrase() []byte {
	if x != nil {
		return x.Passphrase
	}
	return nil
}

func (x *CmdSetConfig) GetBssid() []byte {
	if x != nil {
		return x.Bssid
	}
	return nil
}

func (x *CmdSetConfig) GetChannel() int32 {
	if x != nil {
		return x.Channel
	}
	return 0
}

type RespSetConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespSetConfig) Reset() {
	*x = RespSetConfig{}
	mi := &file_wifi_config_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespSetConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSetConfig) ProtoMessage() {}

func (x *RespSetConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_config_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSetConfig.ProtoReflect.Descriptor instead.
func (*RespSetConfig) Descriptor() ([]byte, []int) {
	return file_wifi_config_proto_rawDescGZIP(), []int{3}
}

func (x *RespSetConfig) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type CmdApplyConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdApplyConfig) Reset() {
	*x = CmdApplyConfig{}
	mi := &file_wifi_config_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdApplyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdApplyConfig) ProtoMessage() {}

func (x *CmdApplyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_config_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdApplyConfig.ProtoReflect.Descriptor instead.
func (*CmdApplyConfig) Descriptor() ([]byte, []int) {
	return file_wifi_config_proto_rawDescGZIP(), []int{4}
}

type RespApplyConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        Status                 `protobuf:"varint,1,opt,name=status,proto3,enum=Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespApplyConfig) Reset() {
	*x = RespApplyConfig{}
	mi := &file_wifi_config_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespApplyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespApplyConfig) ProtoMessage() {}

func (x *RespApplyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_config_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespApplyConfig.ProtoReflect.Descriptor instead.
func (*RespApplyConfig) Descriptor() ([]byte, []int) {
	return file_wifi_config_proto_rawDescGZIP(), []int{5}
}

func (x *RespApplyConfig) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_Success
}

type WiFiConfigPayload struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Msg   WiFiConfigMsgType      `protobuf:"varint,1,opt,name=msg,proto3,enum=WiFiConfigMsgType" json:"msg,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*WiFiConfigPayload_CmdGetStatus
	//	*WiFiConfigPayload_RespGetStatus
	//	*WiFiConfigPayload_CmdSetConfig
	//	*WiFiConfigPayload_RespSetConfig
	//	*WiFiConfigPayload_CmdApplyConfig
	//	*WiFiConfigPayload_RespApplyConfig
	Payload       isWiFiConfigPayload_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WiFiConfigPayload) Reset() {
	*x = WiFiConfigPayload{}
	mi := &file_wifi_config_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WiFiConfigPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WiFiConfigPayload) ProtoMessage() {}

func (x *WiFiConfigPayload) ProtoReflect() protoreflect.Message {
	mi := &file_wifi_config_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WiFiConfigPayload.ProtoReflect.Descriptor instead.
func (*WiFiConfigPayload) Descriptor() ([]byte, []int) {
	return file_wifi_config_proto_rawDescGZIP(), []int{6}
}

func (x *WiFiConfigPayload) GetMsg() WiFiConfigMsgType {
	if x != nil {
		return x.Msg
	}
	return WiFiConfigMsgType_TypeCmdGetStatus
}

func (x *WiFiConfigPayload) GetPayload() isWiFiConfigPayload_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *WiFiConfigPayload) GetCmdGetStatus() *CmdGetStatus {
	if x != nil {
		if x, ok := x.Payload.(*WiFiConfigPayload_CmdGetStatus); ok {
			return x.CmdGetStatus
		}
	}
	return nil
}

func (x *WiFiConfigPayload) GetRespGetStatus() *RespGetStatus {
	if x != nil {
		if x, ok := x.Payload.(*WiFiConfigPayload_RespGetStatus); ok {
			return x.RespGetStatus
		}
	}
	return nil
}

func (x *WiFiConfigPayload) GetCmdSetConfig() *CmdSetConfig {
	if x != nil {
		if x, ok := x.Payload.(*WiFiConfigPayload_CmdSetConfig); ok {
			return x.CmdSetConfig
		}
	}
	return nil
}

func (x *WiFiConfigPayload) GetRespSetConfig() *RespSetConfig {
	if x != nil {
		if x, ok := x.Payload.(*WiFiConfigPayload_RespSetConfig); ok {
			return x.RespSetConfig
		}
	}
	return nil
}

func (x *WiFiConfigPayload) GetCmdApplyConfig() *CmdApplyConfig {
	if x != nil {
		if x, ok := x.Payload.(*WiFiConfigPayload_CmdApplyConfig); ok {
			return x.CmdApplyConfig
		}
	}
	return nil
}

func (x *WiFiConfigPayload) GetRespApplyConfig() *RespApplyConfig {
	if x != nil {
		if x, ok := x.Payload.(*WiFiConfigPayload_RespApplyConfig); ok {
			return x.RespApplyConfig
		}
	}
	return nil
}

type isWiFiConfigPayload_Payload interface {
	isWiFiConfigPayload_Payload()
}

type WiFiConfigPayload_CmdGetStatus struct {
	CmdGetStatus *CmdGetStatus `protobuf:"bytes,10,opt,name=cmd_get_status,json=cmdGetStatus,proto3,oneof"`
}

type WiFiConfigPayload_RespGetStatus struct {
	RespGetStatus *RespGetStatus `protobuf:"bytes,11,opt,name=resp_get_status,json=respGetStatus,proto3,oneof"`
}

type WiFiConfigPayload_CmdSetConfig struct {
	CmdSetConfig *CmdSetConfig `protobuf:"bytes,12,opt,name=cmd_set_config,json=cmdSetConfig,proto3,oneof"`
}

type WiFiConfigPayload_RespSetConfig struct {
	RespSetConfig *RespSetConfig `protobuf:"bytes,13,opt,name=resp_set_config,json=respSetConfig,proto3,oneof"`
}

type WiFiConfigPayload_CmdApplyConfig struct {
	CmdApplyConfig *CmdApplyConfig `protobuf:"bytes,14,opt,name=cmd_apply_config,json=cmdApplyConfig,proto3,oneof"`
}

type WiFiConfigPayload_RespApplyConfig struct {
	RespApplyConfig *RespApplyConfig `protobuf:"bytes,15,opt,name=resp_apply_config,json=respApplyConfig,proto3,oneof"`
}

func (*WiFiConfigPayload_CmdGetStatus) isWiFiConfigPayload_Payload() {}

func (*WiFiConfigPayload_RespGetStatus) isWiFiConfigPayload_Payload() {}

func (*WiFiConfigPayload_CmdSetConfig) isWiFiConfigPayload_Payload() {}

func (*WiFiConfigPayload_RespSetConfig) isWiFiConfigPayload_Payload() {}

func (*WiFiConfigPayload_CmdApplyConfig) isWiFiConfigPayload_Payload() {}

func (*WiFiConfigPayload_RespApplyConfig) isWiFiConfigPayload_Payload() {}

var File_wifi_config_proto protoreflect.FileDescriptor

const file_wifi_config_proto_rawDesc = "" +
	"\n" +
	"\x11wifi_config.proto\x1a\x0fconstants.proto\x1a\x14wifi_constants.proto\"\x0e\n" +
	"\fCmdGetStatus\"\xdb\x01\n" +
	"\rRespGetStatus\x12\x1f\n" +
	"\x06status\x18\x01 \x01(\x0e2\a.StatusR\x06status\x12.\n" +
	"\tsta_state\x18\x02 \x01(\x0e2\x11.WifiStationStateR\bstaState\x12;\n" +
	"\vfail_reason\x18\n" +
	" \x01(\x0e2\x18.WifiConnectFailedReasonH\x00R\n" +
	"failReason\x123\n" +
	"\tconnected\x18\v \x01(\v2\x13.WifiConnectedStateH\x00R\tconnectedB\a\n" +
	"\x05state\"r\n" +
	"\fCmdSetConfig\x12\x12\n" +
	"\x04ssid\x18\x01 \x01(\fR\x04ssid\x12\x1e\n" +
	"\n" +
	"passphrase\x18\x02 \x01(\fR\n" +
	"passphrase\x12\x14\n" +
	"\x05bssid\x18\x03 \x01(\fR\x05bssid\x12\x18\n" +
	"\achannel\x18\x04 \x01(\x05R\achannel\"0\n" +
	"\rRespSetConfig\x12\x1f\n" +
	"\x06status\x18\x01 \x01(\x0e2\a.StatusR\x06status\"\x10\n" +
	"\x0eCmdApplyConfig\"2\n" +
	"\x0fRespApplyConfig\x12\x1f\n" +
	"\x06status\x18\x01 \x01(\x0e2\a.StatusR\x06status\"\xa3\x03\n" +
	"\x11WiFiConfigPayload\x12$\n" +
	"\x03msg\x18\x01 \x01(\x0e2\x12.WiFiConfigMsgTypeR\x03msg\x125\n" +
	"\x0ecmd_get_status\x18\n" +
	" \x01(\v2\r.CmdGetStatusH\x00R\fcmdGetStatus\x128\n" +
	"\x0fresp_get_status\x18\v \x01(\v2\x0e.RespGetStatusH\x00R\rrespGetStatus\x125\n" +
	"\x0ecmd_set_config\x18\f \x01(\v2\r.CmdSetConfigH\x00R\fcmdSetConfig\x128\n" +
	"\x0fresp_set_config\x18\r \x01(\v2\x0e.RespSetConfigH\x00R\rrespSetConfig\x12;\n" +
	"\x10cmd_apply_config\x18\x0e \x01(\v2\x0f.CmdApplyConfigH\x00R\x0ecmdApplyConfig\x12>\n" +
	"\x11resp_apply_config\x18\x0f \x01(\v2\x10.RespApplyConfigH\x00R\x0frespApplyConfigB\t\n" +
	"\apayload*\x9e\x01\n" +
	"\x11WiFiConfigMsgType\x12\x14\n" +
	"\x10TypeCmdGetStatus\x10\x00\x12\x15\n" +
	"\x11TypeRespGetStatus\x10\x01\x12\x14\n" +
	"\x10TypeCmdSetConfig\x10\x02\x12\x15\n" +
	"\x11TypeRespSetConfig\x10\x03\x12\x16\n" +
	"\x12TypeCmdApplyConfig\x10\x04\x12\x17\n" +
	"\x13TypeRespApplyConfig\x10\x05B\vZ\t/protogenb\x06proto3"

var (
	file_wifi_config_proto_rawDescOnce sync.Once
	file_wifi_config_proto_rawDescData []byte
)

func file_wifi_config_proto_rawDescGZIP() []byte {
	file_wifi_config_proto_rawDescOnce.Do(func() {
		file_wifi_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_wifi_config_proto_rawDesc), len(file_wifi_config_proto_rawDesc)))
	})
	return file_wifi_config_proto_rawDescData
}

var file_wifi_config_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_wifi_config_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_wifi_config_proto_goTypes = []any{
	(WiFiConfigMsgType)(0),       // 0: WiFiConfigMsgType
	(*CmdGetStatus)(nil),         // 1: CmdGetStatus
	(*RespGetStatus)(nil),        // 2: RespGetStatus
	(*CmdSetConfig)(nil),         // 3: CmdSetConfig
	(*RespSetConfig)(nil),        // 4: RespSetConfig
	(*CmdApplyConfig)(nil),       // 5: CmdApplyConfig
	(*RespApplyConfig)(nil),      // 6: RespApplyConfig
	(*WiFiConfigPayload)(nil),    // 7: WiFiConfigPayload
	(Status)(0),                  // 8: Status
	(WifiStationState)(0),        // 9: WifiStationState
	(WifiConnectFailedReason)(0), // 10: WifiConnectFailedReason
	(*WifiConnectedState)(nil),   // 11: WifiConnectedState
}
var file_wifi_config_proto_depIdxs = []int32{
	8,  // 0: RespGetStatus.status:type_name -> Status
	9,  // 1: RespGetStatus.sta_state:type_name -> WifiStationState
	10, // 2: RespGetStatus.fail_reason:type_name -> WifiConnectFailedReason
	11, // 3: RespGetStatus.connected:type_name -> WifiConnectedState
	8,  // 4: RespSetConfig.status:type_name -> Status
	8,  // 5: RespApplyConfig.status:type_name -> Status
	0,  // 6: WiFiConfigPayload.msg:type_name -> WiFiConfigMsgType
	1,  // 7: WiFiConfigPayload.cmd_get_status:type_name -> CmdGetStatus
	2,  // 8: WiFiConfigPayload.resp_get_status:type_name -> RespGetStatus
	3,  // 9: WiFiConfigPayload.cmd_set_config:type_name -> CmdSetConfig
	4,  // 10: WiFiConfigPayload.resp_set_config:type_name -> RespSetConfig
	5,  // 11: WiFiConfigPayload.cmd_apply_config:type_name -> CmdApplyConfig
	6,  // 12: WiFiConfigPayload.resp_apply_config:type_name -> RespApplyConfig
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_wifi_config_proto_init() }
func file_wifi_config_proto_init() {
	if File_wifi_config_proto != nil {
		return
	}
	file_constants_proto_init()
	file_wifi_constants_proto_init()
	file_wifi_config_proto_msgTypes[1].OneofWrappers = []any{
		(*RespGetStatus_FailReason)(nil),
		(*RespGetStatus_Connected)(nil),
	}
	file_wifi_config_proto_msgTypes[6].OneofWrappers = []any{
		(*WiFiConfigPayload_CmdGetStatus)(nil),
		(*WiFiConfigPayload_RespGetStatus)(nil),
		(*WiFiConfigPayload_CmdSetConfig)(nil),
		(*WiFiConfigPayload_RespSetConfig)(nil),
		(*WiFiConfigPayload_CmdApplyConfig)(nil),
		(*WiFiConfigPayload_RespApplyConfig)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_wifi_config_proto_rawDesc), len(file_wifi_config_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_wifi_config_proto_goTypes,
		DependencyIndexes: file_wifi_config_proto_depIdxs,
		EnumInfos:         file_wifi_config_proto_enumTypes,
		MessageInfos:      file_wifi_config_proto_msgTypes,
	}.Build()
	File_wifi_config_proto = out.File
	file_wifi_config_proto_goTypes = nil
	file_wifi_config_proto_depIdxs = nil
}
